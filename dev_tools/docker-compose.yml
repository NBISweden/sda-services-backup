version: "3.7"
services:
  mys3:
    command: server /data
    container_name: mys3
    environment:
      - MINIO_ACCESS_KEY=myaccesskey
      - MINIO_SECRET_KEY=mysecretkey
    healthcheck:
      test: ["CMD", "curl", "-fkq", "https://127.0.0.1:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 3
    image: minio/minio:RELEASE.2020-10-28T08-16-50Z
    ports:
      - "9000:9000"
    volumes:
      - ./certs/ca.pem:/root/.minio/certs/CAs/public.crt:ro
      - ./certs/s3.pem:/root/.minio/certs/public.crt:ro
      - ./certs/s3-key.pem:/root/.minio/certs/private.key:ro
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elastic
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - path.repo=/usr/share/elasticsearch/backups
    healthcheck:
      test: ["CMD", "curl", "-fq", "http://127.0.0.1:9200/_cluster/health?wait_for_status=green"]
      interval: 5s
      timeout: 20s
      retries: 8
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  elastic2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elastic2
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster-2
      - cluster.initial_master_nodes=es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - path.repo=/usr/share/elasticsearch/backups
      - transport.tcp.port=9200
      - transport.publish_port=9201
    healthcheck:
      test: ["CMD", "curl", "-fq", "http://127.0.0.1:9201/_cluster/health?wait_for_status=green"]
      interval: 10s
      timeout: 20s
      retries: 8
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - datasecond:/usr/share/elasticsearch/data
    ports:
      - 9201:9201
  db:
    depends_on:
      - tlsFixer
    container_name: db
    command: -c ssl=on -c ssl_cert_file=/data/certs/s3.pem -c ssl_key_file=/data/certs/s3-key.pem -c ssl_ca_file=/data/certs/ca.pem
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/pgdata
      - POSTGRES_DB=test
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "postgres"]
      interval: 5s
      timeout: 20s
      retries: 3
    restart: always
    image: postgres:11.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - pgData:/data
      - ./sql_files:/docker-entrypoint-initdb.d
  tlsFixer:
    image: alpine:3.12
    container_name: fixer
    command: sh -c "mkdir -p /data/certs/ && cp /certs/* /data/certs && chmod 600 /data/certs/*key.pem && chown 70:70 /data/certs/*"
    volumes:
      - ./certs:/certs:ro
      - pgData:/data
volumes:
  data:
  datasecond:
  pgData:
